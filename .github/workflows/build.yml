name: Build Android APK (InventarioPro)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-22.04
    env:
      PYTHON_VERSION: '3.11'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: ~/.buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      - name: Cache Buildozer dependencies
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: ${{ runner.os }}-buildozer-deps-${{ hashFiles('buildozer.spec') }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-deps-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip openjdk-17-jdk python3-pip python3-venv python3-dev build-essential
          sudo apt-get install -y libssl-dev libffi-dev libxml2-dev libxslt1-dev libjpeg-dev zlib1g-dev
          sudo apt-get install -y autoconf libtool pkg-config libncurses5-dev libncursesw5-dev libtinfo5 cmake ccache

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install --upgrade cython==0.29.36
          pip install git+https://github.com/kivy/buildozer.git

      - name: Verify buildozer installation
        run: |
          buildozer --version
          buildozer android clean || true

      - name: Build APK (debug)
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: |
          buildozer android debug --verbose

      - name: List generated files
        run: |
          ls -la bin/ || echo "No bin directory"
          find . -name "*.apk" -type f 2>/dev/null || echo "No APK found"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: inventariopro-debug-apk-${{ github.run_number }}
          path: bin/*.apk
          retention-days: 30

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs-${{ github.run_number }}
          path: |
            .buildozer/android/platform/python-for-android/dist/*/build.log
            .buildozer/android/platform/build-*/**/*.log
          retention-days: 7